trigger: none

parameters:
- name: personalAccessToken
  displayName: Personal Access Token
  type: string

variables:
  workingDirectory: './Pipelines/variable-groups/Terraform'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: plan_stage
    displayName: 'Terraform Plan'
    jobs:
      - job: plan_job
        displayName: 'Terraform Plan Job'
        steps:

        - script: |
            echo "Organization URL: $(System.TeamFoundationCollectionUri)"
            echo "Project Name: $(System.TeamProject)"
            echo "Project ID: $(System.TeamProjectId)"
          displayName: 'Print Project Details'

        - task: TerraformInstaller@1
          displayName: 'Installing Terraform'
          inputs:
            terraformVersion: 'latest'

        - script: terraform init
          displayName: 'Terraform Init'
          workingDirectory: $(workingDirectory)

        - script: terraform validate
          displayName: 'Terraform Validate'
          workingDirectory: $(workingDirectory)

        - script: terraform plan
          displayName: 'Terraform Plan'
          workingDirectory: $(workingDirectory)
          env:
            TF_VAR_org_service_url: $(System.TeamFoundationCollectionUri)
            TF_VAR_project_id: $(System.TeamProjectId)
            TF_VAR_personal_access_token: ${{ parameters.personalAccessToken }}

  - stage: manual_validation
    displayName: 'Validate Terraform Plan'
    dependsOn: 'plan_stage'
    jobs:
      - job: waitForValidation
        displayName: Wait for external validation
        pool: server
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 5 # task times out in 5 minutes
          inputs:
            notifyUsers: ''
            instructions: 'Please validate Terraform configuration and resume'
            onTimeout: reject

  - stage: apply_stage
    displayName: 'Terraform Apply'
    dependsOn: 
      - 'manual_validation'
      - 'plan_stage'
    jobs:
      - job: apply_job
        displayName: 'Terraform Apply Job'
        steps:
        
        - task: TerraformInstaller@1
          displayName: 'Installing Terraform'
          inputs:
            terraformVersion: 'latest'

        - script: terraform init
          displayName: 'Terraform Init'
          workingDirectory: $(workingDirectory)

        - script: terraform apply -auto-approve
          displayName: 'Terraform Apply'
          workingDirectory: $(workingDirectory)
          env:
            TF_VAR_org_service_url: $(System.TeamFoundationCollectionUri)
            TF_VAR_project_id: $(System.TeamProjectId)
            TF_VAR_personal_access_token: ${{ parameters.personalAccessToken }}